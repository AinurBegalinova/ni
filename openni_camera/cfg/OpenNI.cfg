#! /usr/bin/env python

PACKAGE='openni_camera'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

# TODO: Allow changing device_id on the fly?

#gen.add("max_range", double_t, 0, "Cut off depth readings beyond this range", 5.0, 1.0, 10.0)


point_cloud_type_enum = gen.enum([ gen.const("XYZ", int_t, 0, "plain point cloud"),
                                   gen.const("XYZRGB", int_t, 1, "point cloud with color information")],
                                   "point cloud type")

gen.add("point_cloud_type", int_t, 0, "Point cloud type", 1, 0, 1, edit_method = point_cloud_type_enum)

point_cloud_resolution_enum = gen.enum([ gen.const("QQVGA", int_t, 0, "160x120"),
                                         gen.const("QVGA", int_t, 1, "320x240"),
                                         gen.const("VGA", int_t, 2, "320x240")],
                                         "resolution for point cloud")

gen.add( "point_cloud_resolution", int_t, 0, "Point cloud resolution", 2, 0, 2, edit_method = point_cloud_resolution_enum)

image_resolution_enum = gen.enum([ gen.const("VGA_30Hz", int_t, 0, "640x480@30Hz"),
                                   gen.const("SXGA_15Hz", int_t, 1, "1280x1024@15Hz")],
                                   "Enum to set image resolution")

image_stream_enum = gen.enum([ gen.const("RGB", int_t, 0, "24-Bit RGB")],
                               "Enum to set image type for second stream");

gen.add("image_resolution", int_t, 0, "Image resolution for the color image", 0, 0, 1, edit_method = image_resolution_enum)

gen.add("image_type", int_t, 0, "Image type", 0, 0, 0, edit_method = image_stream_enum)

led_enum = gen.enum([ gen.const("Off", int_t, 0, "Off"),
                      gen.const("Green", int_t, 1, "Green"),
                      gen.const("Red", int_t, 2, "Red"),
                      gen.const("Yellow", int_t, 3, "Yellow"),
                      gen.const("BlinkYellow", int_t, 4, "Blink yellow"),
                      gen.const("BlinkGreen", int_t, 5, "Blink green"),
                      gen.const("BlinkRedYellow", int_t, 6, "Blink red and yellow")],
                      "Enum to set the LED mode")
#gen.add("led", int_t, 0, "LED mode", 5, 0, 6, edit_method = led_enum)

#gen.add("tilt", double_t, 0, "Control the tilt motor, degrees", 0.0, -31, 31)

exit(gen.generate(PACKAGE, "OpenNI", "OpenNI"))
